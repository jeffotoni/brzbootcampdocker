# Etapa 1: Compilação do binário (build)
FROM golang:1.23 AS builder

# Ajusta o fuso horário para o Brasil, copiando certs
RUN apt-get update && apt-get install -y tzdata && \
    ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && \
    apt-get install ca-certificates && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Configura o diretório de trabalho
WORKDIR /app

# Copia os arquivos do projeto para o contêiner
COPY . .

# Habilita a compilação de binários estáticos Mac
# ENV GOOS=darwin
# ENV GOARCH=arm64
# ENV CGO_ENABLED=0

# Configura o ambiente para Windows
# ENV GOOS=windows
# ENV GOARCH=amd64
# ENV CGO_ENABLED=0

# Configura o ambiente para Linux
ENV GOOS=linux
ENV GOARCH=amd64
ENV CGO_ENABLED=0

# Compila o binário Go
RUN go build -a -ldflags="-s -w" -o api .

# Etapa 2: Imagem mínima para execução
FROM scratch

# Fuso horário
ENV TZ=America/Sao_Paulo

# Configura o fuso horário para o Brasil
COPY --from=builder /etc/localtime /etc/localtime
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copia o binário compilado
COPY --from=builder /app/api /usr/local/bin/api

# Define a porta usada pela aplicação
EXPOSE 8080

# Define o comando de inicialização
ENTRYPOINT ["/usr/local/bin/api"]